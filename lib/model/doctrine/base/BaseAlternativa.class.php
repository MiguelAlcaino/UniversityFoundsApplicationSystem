<?php

/**
 * BaseAlternativa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $pregunta_id
 * @property string $texto_alternativa
 * @property Pregunta $Pregunta
 * @property Doctrine_Collection $Respuestas
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getPreguntaId()        Returns the current record's "pregunta_id" value
 * @method string              getTextoAlternativa()  Returns the current record's "texto_alternativa" value
 * @method Pregunta            getPregunta()          Returns the current record's "Pregunta" value
 * @method Doctrine_Collection getRespuestas()        Returns the current record's "Respuestas" collection
 * @method Alternativa         setId()                Sets the current record's "id" value
 * @method Alternativa         setPreguntaId()        Sets the current record's "pregunta_id" value
 * @method Alternativa         setTextoAlternativa()  Sets the current record's "texto_alternativa" value
 * @method Alternativa         setPregunta()          Sets the current record's "Pregunta" value
 * @method Alternativa         setRespuestas()        Sets the current record's "Respuestas" collection
 * 
 * @package    postulacion_interna
 * @subpackage model
 * @author     Miguel Alcaino
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAlternativa extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('alternativa');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('pregunta_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('texto_alternativa', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Pregunta', array(
             'local' => 'pregunta_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('RespuestaAlternativa as Respuestas', array(
             'local' => 'id',
             'foreign' => 'alternativa_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}